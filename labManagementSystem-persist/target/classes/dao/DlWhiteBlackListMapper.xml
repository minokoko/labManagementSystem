<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.danlu.dlgateway.persist.dao.DlWhiteBlackListMapper">
	<resultMap id="BaseResultMap"
		type="com.danlu.dlgateway.persist.entity.DlWhiteBlackList">
		<id column="id" property="id" jdbcType="VARCHAR" />
		<result column="project_id" property="projectId" jdbcType="VARCHAR" />
		<result column="ip" property="ip" jdbcType="VARCHAR" />
		<result column="status" property="status" jdbcType="VARCHAR" />
		<result column="flag" property="flag" jdbcType="INTEGER" />
		<result column="user_id" property="userId" jdbcType="VARCHAR" />
		<result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP" />
		<result column="gmt_update" property="gmtUpdate" jdbcType="TIMESTAMP" />
		<result column="create_person" property="createPerson"
			jdbcType="VARCHAR" />
		<result column="update_person" property="updatePerson"
			jdbcType="VARCHAR" />
		<result column="logic_delete_flag" property="logicDeleteFlag"
			jdbcType="INTEGER" />

	</resultMap>

	<sql id="Base_Column_List">
		id, project_id, ip, status, flag, user_id, gmt_create, gmt_update,
		create_person,
		update_person,logic_delete_flag
	</sql>


	<!-- 查询语句汇总 -->
	<sql id="selectByParamsWhere">
		<where>
			<if test="id != null">
				id = #{id,jdbcType=VARCHAR} and
			</if>
			<if test="projectId != null">
				project_id = #{projectId,jdbcType=VARCHAR} and
			</if>
			<if test="ip != null">
				ip = #{ip,jdbcType=VARCHAR} and
			</if>
			<if test="status != null">
				status = #{status,jdbcType=VARCHAR} and
			</if>
			<if test="flag != null">
				flag= #{flag,jdbcType=INTEGER} and
			</if>
			<if test="userId != null">
				user_id= #{userId,jdbcType=VARCHAR} and
			</if>
			<if test="logicDeleteFlag != null">
				logic_delete_flag = #{logicDeleteFlag,jdbcType=INTEGER} and
			</if>
			1 = 1
		</where>
	</sql>



	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from dl_white_black_list
		where id = #{id,jdbcType=VARCHAR}
	</select>
	
	<select id="selectByProjectIdAndOtherParam" resultMap="BaseResultMap"
		parameterType="java.util.Map">
		select
		<include refid="Base_Column_List" />
		from dl_white_black_list
		<include refid="selectByParamsWhere" />
		order by ${sort} ${order}
		<if test="pageOffset!=null and pageSize!=null">
		    limit #{pageOffset},#{pageSize}
		</if>
	</select>
	
	<select id="selectRecordCountByParam"  resultType="java.lang.Long" parameterType="java.util.Map">
		select count(*)
		from dl_white_black_list
		<include refid="selectByParamsWhere" />
	</select>
	

	<!-- 按主键删除 -->
	<update id="deleteByPrimaryKey" parameterType="java.util.Map">
		update dl_white_black_list
		set logic_delete_flag=#{deleteLogicDeleteFlag,jdbcType=INTEGER},
		gmt_update =NOW(),
		update_person = #{updatePerson,jdbcType=VARCHAR}
		<include refid="selectByParamsWhere"/>
	</update>

	<insert id="insert" parameterType="com.danlu.dlgateway.persist.entity.DlWhiteBlackList">
		insert into dl_white_black_list (id, project_id, ip,
		status, flag, user_id,
		gmt_create, gmt_update, create_person,
		update_person,logic_delete_flag)
		values (#{id,jdbcType=VARCHAR}, #{projectId,jdbcType=VARCHAR},
		#{ip,jdbcType=VARCHAR},
		#{status,jdbcType=VARCHAR}, #{flag,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR},
		NOW(),NOW(), #{createPerson,jdbcType=VARCHAR},
		#{updatePerson,jdbcType=VARCHAR},#{logicDeleteFlag,jdbcType=INTEGER})
	</insert>


	<update id="updateByPrimaryKeySelective" parameterType="com.danlu.dlgateway.persist.entity.DlWhiteBlackList">
		update dl_white_black_list
		<set>
			<if test="projectId != null">
				project_id = #{projectId,jdbcType=VARCHAR},
			</if>
			<if test="ip != null">
				ip = #{ip,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=VARCHAR},
			</if>
			<if test="flag != null">
				flag = #{flag,jdbcType=INTEGER},
			</if>
			<if test="userId != null">
				user_id = #{userId,jdbcType=VARCHAR},
			</if>
			gmt_update =NOW(),
			update_person = #{updatePerson,jdbcType=VARCHAR},
		</set>
		where id = #{id,jdbcType=VARCHAR}
	</update>
</mapper>